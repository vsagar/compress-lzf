0.9.6 (05-Sep-2012)

* [Issue#17] Add IOException subtypes 'LZFException' and 'GZIPException' (with
  common supertype of 'CompressionFormatException) to allow for better
  catching of decompression errors
* [Issue#19] (more) Efficient skipping with LZFInputStream, LZFFileInputStream;
  can skip full chunks without decoding -- much faster (as per simple tests)

0.9.5 (25-May-2012)

* Add 'LZFCompressingInputStream' to allow streaming compression
 "in reverse" (compared to LZFOutputStream)

0.9.4 (21-May-2012)

* Add GZIP support functionality:
 * 'OptimizedGZIPInputStream', 'OptimizedGZIPOutputStream' which add buffer
   (and Inflater/Deflater) recycling for improved performance compared to
  default JDK implementations (uses same native ZLIB library for actual
  decompression)
* Add "push-mode" handler, 'Uncompressor' to be used for un-/decompression
  with non-blocking push-style data sources (like async-http-client)
 * Implementations for LZF (LZFUncompressor) and GZIP (GZIPUncompressor)
 * 'UncompressorOutputStream' convenience wrapper to expose 'Uncompressor'
   as 'OutputStream'

0.9.3

* Fixed Issue #12: Command-line tool out of memory
 (reported by nodarret@github)
* Implemented Issue #16: Add LZFInputStream.readAndWrite(...) method for copying
  uncompressed data, avoiding an intermediate copy.

0.9.2:

* Fix for Issue #15: LZFDecoder not passing 'offset', 'length' params
  (reported by T.Effland)

0.9.1:

* Fix for Issue #13: problems with Unsafe decoder on some platforms

0.9.0:

* Rewrote decoder to allow ChunkDecoder variants, to allow optional use of
  sun.misc.Unsafe (which can boost uncompression speed by up to +50%)

0.8.6:

* #11: Input/OutputStreams not throwing IOException if reading/writing
   after close() called, should be.
  (reported by Dain S)

0.8.5:

* Fix an NPE in BufferRecycler
  (reported by Matt Abrams, abramsm@gmail.com)
